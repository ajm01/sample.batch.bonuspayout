<server description="derby DB">

    <dataSource id="batchDB" type="javax.sql.XADataSource">
        <jdbcDriver libraryRef="DerbyLib"/>
        <properties createDatabase="create" databaseName="${db.url}" user="user" password="pass"/>
    </dataSource>

    <dataSource id="appDB" jndiName="jdbc/batch" type="javax.sql.XADataSource">
        <jdbcDriver libraryRef="DerbyLib"/>
        <!-- 
        <properties.derby.embedded createDatabase="create" databaseName="${db.url}" user="user" password="pass"/>
 -->
        <properties createDatabase="create" databaseName="${db.url}" user="user" password="pass"/>
    </dataSource>

    <!-- 
         Create a non-transactional datasource that can be used with a holdable cursor.  Another option
         would be to remove the attribute:  transactional="false" and have a one-phase-only resource
         that could be used to enlist via a "last participant" optimization -->
    <dataSource id="appReadOnlyDB" jndiName="jdbc/ReadOnlyDS" transactional="false">
        <jdbcDriver libraryRef="DerbyLib"/>
        <properties createDatabase="create" databaseName="${db.url}" user="user" password="pass"/>
        <connectionManager enableSharingForDirectLookups="false"/>
    </dataSource>   

</server>
