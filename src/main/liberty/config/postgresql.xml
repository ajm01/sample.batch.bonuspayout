<server description="PostgreSQL">

    <dataSource id="batchDB" type="javax.sql.XADataSource">
    	<jdbcDriver libraryRef="postgresLib"/>
		<properties serverName="${POSTGRES_HOSTNAME}" portNumber="${POSTGRES_PORT}" user="test" password="test" databaseName="testdb"/>
	</dataSource>

    <!--  In this sample we'll use the same database (as the runtime DB) but use a different DS to access it. -->
    <dataSource id="appDB" jndiName="jdbc/batch" type="javax.sql.XADataSource">
    	<jdbcDriver libraryRef="postgresLib"/>
		<properties serverName="${POSTGRES_HOSTNAME}" portNumber="${POSTGRES_PORT}" user="test" password="test" databaseName="testdb"/>
	</dataSource>
	
    <!--  NOT SURE THIS MAKES SENSE YET for PostgreSQL
         Create a non-transactional datasource that can be used with a holdable cursor.  Another option
         would be to remove the attribute:  transactional="false" and have a one-phase-only resource
         that could be used to enlist via a "last participant" optimization -->
    <dataSource id="appReadOnlyDB" jndiName="jdbc/ReadOnlyDS" transactional="false">
        <!--
           <dataSource id="appReadOnlyDB" jndiName="jdbc/ReadOnlyDS">
         -->
    	<jdbcDriver libraryRef="postgresLib"/>
		<properties serverName="${POSTGRES_HOSTNAME}" portNumber="${POSTGRES_PORT}" user="test" password="test" databaseName="testdb"/>
        <connectionManager enableSharingForDirectLookups="false"/>
    </dataSource>
    
</server>
